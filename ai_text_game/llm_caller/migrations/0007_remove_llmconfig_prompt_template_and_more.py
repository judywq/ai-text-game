# Generated by Django 5.0.10 on 2025-01-15 13:42

import ai_text_game.llm_caller.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('llm_caller', '0006_apirequest_score_alter_llmconfig_prompt_template'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='llmconfig',
            name='prompt_template',
        ),
        migrations.AddField(
            model_name='llmconfig',
            name='system_prompt',
            field=models.TextField(default='You are an essay scoring assistant that always outputs JSON that matches this schema:\nclass Response\n    score: float\n\nRequirements:\n- Score must be a float between 0 and 10\n- Output must be a valid JSON object with only a \'score\' field\n- Example valid response: {"score": 8.5}\n\nInvalid responses:\n- {"score": "8.5"}  # score as string is invalid\n- {"score": 11}     # score > 10 is invalid\n- {"grade": 8.5}    # wrong field name', help_text='The system prompt instructs the model to generate JSON format.'),
        ),
        migrations.AddField(
            model_name='llmconfig',
            name='user_prompt_template',
            field=models.TextField(default='Please evalute the following essay:\n\n{essay}', help_text="Use '{essay}' (without the quote) as placeholder for user input", validators=[ai_text_game.llm_caller.models.validate_user_prompt_template]),
        ),
        migrations.AlterField(
            model_name='llmconfig',
            name='temperature',
            field=models.FloatField(default=0, help_text='Value between 0 and 2', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(2.0)]),
        ),
        migrations.AlterField(
            model_name='llmmodel',
            name='display_name',
            field=models.CharField(help_text='Display name for the model (e.g., GPT-4o)', max_length=200),
        ),
        migrations.AlterField(
            model_name='llmmodel',
            name='is_active',
            field=models.BooleanField(default=False, help_text='The most recently created active model will be used'),
        ),
        migrations.AlterField(
            model_name='llmmodel',
            name='name',
            field=models.CharField(help_text="The model name for calling the LLM API (e.g., gpt-4o-2024-11-20). Check <a href='https://platform.openai.com/docs/models#current-model-aliases' target='_blank'>OpenAI model list</a>.", max_length=200),
        ),
    ]
